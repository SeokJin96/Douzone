/*
 user 사용자 <> provider 제공자

class A {}
class B {}

관계 : A는 B를 사용합니다.

1. 상속 : A extends B
2. 포함 : A라는 클래스가 member field로 B를 사용 >> class A {B b;}
2.1 부분
2.2 전체

class B{}
class A {
	int i;
	B b; // A는 B를 사용합니다 (포함)
	A(){ //생성자
		b=new B();
	}
}

>> main(){
	A a = new A(); //같은 운명체
	a = null;
	a.b.자원명
}

포함관계
>>B는 독자생성 불가능 >> A라는 객체가 생성되면 B도 생성
>>A,B 둘은 공통 운명체(전체집합 Composition)
>>자동차 엔진, 노트북과 cpu

class B{}
class A{
	int i;
	B b; //A는 B를 사용합니다 (포함)
	A(){
	
	}
	//method
	 void m(B b){
	 this.b = b;
	 }
}



 */
public class Ex05_User_Provider {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
