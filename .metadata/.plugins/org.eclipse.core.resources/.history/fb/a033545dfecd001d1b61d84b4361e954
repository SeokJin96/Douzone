
/*

**********기준**************
여러개의 설계도가 있을 때 관계 .... 만들어주는 기준

1.상속 : is ~ a : 은(는) ~ 이다 	>> 상속의 관계 (부모를 뒤에)
2.포함 : has ~ a : 은(는) ~ 가지고 있다	>>

1) 원은 도형이다
2) 경찰은 권총을 가지고 있다.


class Shape{그리다	,색상} >> 상속관계에서 부모역할 >> 원,삼각형,사각형
class point{좌표값}	>> 포함관계 >> (부품)

구체화, 특수화 : Circle, Triangle

 */

class Shape{
	String color="gold";
	void draw() {
		System.out.println("도형을 그리다");
	}
}

class Point{
	int x;
	int y;
	
	Point(){
		this.x = 1;
		this.y = 1;
	}
	Point(int x, int y){
		this.x=x;
		this.y=y;
	}
}

//문제)
/*
 원을 만드세요(원의 정의 : 원은 한 점과 반지름을 가지고 있다) 
  1. 원은 도형이다(is~a) : Shape
  2. 원은 점을 가지고 있다. (has~a) : Point
  3. 원은 특수화, 구체화된 내용은 : 반지름
  
  원의 반지름은 초기값 10을 가진다.
  점의 좌표는 초기값 (10,15)를 가진다
  초기값을 설정하지 않으면 반지름과 점의 값을 입력 받을 수 있다.
 */

class Circle extends Shape{
	Point point; // 포함 > 부품
	int r; //구체화 특수화
	
	Circle(){
		this.r=10;
		this.point=new Point(10,15);
	}
	Circle(int r, Point point){
		this.r=r;
		this.point=point;
	}
}

public class Ex02_Inherit_Composition {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
